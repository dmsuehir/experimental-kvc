apiVersion: v1
kind: Pod
metadata:
  name: "{{.KVCName}}"
  namespace: "{{.NS}}"
  ownerReferences:
  - apiVersion: {{.APIVersion}}
    kind: {{.Kind}}
    name: {{.Name}}
    uid: {{.UID}}
    controller: {{.Controller}}
    blockOwnerDeletion: {{.BlockOwnerDeletion}}
  labels:
{{ range $key, $val := .Labels }}
    "{{ $key }}": "{{ $val }}"
{{ end }}
spec:
  nodeName: "{{.NodeName}}"
  volumes:
    - name: dataset-root
      hostPath:
        path: {{index .Options "dataPath"}}
  initContainers:
  - image: minio/mc:RELEASE.2018-02-09T23-07-36Z
    imagePullPolicy: "Always"
    command: ["/bin/sh"]
    args: ["-c", "mkdir -p $DATA_PATH"]
    name: kvc-s3-init-container
    volumeMounts:
    - mountPath: {{index .Options "dataPath"}}
      name: dataset-root
    env:
    - name: DATA_PATH
      value: {{ index .KVCOptions "path" }}
  containers:
  - image: minio/mc:RELEASE.2018-02-09T23-07-36Z
    imagePullPolicy: "Always"
    command: ["/bin/sh"]
    args: ["-c", "mc config host add s3 ${AWS_ENDPOINT_URL} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}; mc cp ${RECURSIVE_OPTION} s3/${BUCKET_NAME}/${BUCKET_PATH} ${DATA_PATH}"]
    name: kvc-s3-sync-container
    volumeMounts:
    - mountPath: {{index .Options "dataPath"}}
      name: dataset-root
    env:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: {{index .Options "awsCredentialsSecretName"}}
          key: awsAccessKeyID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: {{index .Options "awsCredentialsSecretName"}}
          key: awsSecretAccessKey
    - name: AWS_ENDPOINT_URL
      value: {{.EndpointURL}}
    - name: S3_URL
      value: {{.SourceURL}}
    - name: BUCKET_NAME
      value: {{.BucketName}}
    - name: BUCKET_PATH
      value: {{.BucketPath}}
    - name: DATA_PATH
      value: {{ index .KVCOptions "path" }}
    - name: RECURSIVE_OPTION
      value: {{.RecursiveOption}}
  restartPolicy: "Never"
